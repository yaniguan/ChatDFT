"""init

Revision ID: 3dc925f74cf2
Revises: 6bc5c439d430
Create Date: 2025-09-08 11:49:28.595224

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3dc925f74cf2'
down_revision: Union[str, Sequence[str], None] = '6bc5c439d430'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_job_batch_uid'), table_name='job')
    op.drop_index(op.f('ix_job_session_uid'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('idx_execution_task_session_order'), table_name='execution_task')
    op.drop_index(op.f('idx_execution_task_status'), table_name='execution_task')
    op.drop_index(op.f('ix_execution_task_session_id'), table_name='execution_task')
    op.drop_index(op.f('ix_execution_task_status'), table_name='execution_task')
    op.drop_table('execution_task')
    op.drop_index(op.f('ix_file_asset_job_uid'), table_name='file_asset')
    op.drop_table('file_asset')
    op.drop_index(op.f('ix_result_row_job_uid'), table_name='result_row')
    op.drop_table('result_row')
    op.drop_constraint(op.f('uq_chat_session_uid'), 'chat_session', type_='unique')
    op.drop_column('chat_session', 'uid')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chat_session', sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('uq_chat_session_uid'), 'chat_session', ['uid'], postgresql_nulls_not_distinct=False)
    op.create_table('result_row',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('step', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('energy', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_uid'], ['job.job_uid'], name=op.f('result_row_job_uid_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('result_row_pkey'))
    )
    op.create_index(op.f('ix_result_row_job_uid'), 'result_row', ['job_uid'], unique=False)
    op.create_table('file_asset',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kind', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('path_remote', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('path_local', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_uid'], ['job.job_uid'], name=op.f('file_asset_job_uid_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('file_asset_pkey'))
    )
    op.create_index(op.f('ix_file_asset_job_uid'), 'file_asset', ['job_uid'], unique=False)
    op.create_table('execution_task',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_idx', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('task_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hpc_job_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('local_dir', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('remote_dir', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], name=op.f('execution_task_session_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('execution_task_pkey'))
    )
    op.create_index(op.f('ix_execution_task_status'), 'execution_task', ['status'], unique=False)
    op.create_index(op.f('ix_execution_task_session_id'), 'execution_task', ['session_id'], unique=False)
    op.create_index(op.f('idx_execution_task_status'), 'execution_task', ['status'], unique=False)
    op.create_index(op.f('idx_execution_task_session_order'), 'execution_task', ['session_id', 'order_idx'], unique=False)
    op.create_table('job',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('session_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('server_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scheduler', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('batch_uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('params', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('remote_dir', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('local_dir', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('slurm_or_pbs_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_uid'], ['chat_session.uid'], name=op.f('job_session_uid_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('job_pkey')),
    sa.UniqueConstraint('job_uid', name=op.f('job_job_uid_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_job_session_uid'), 'job', ['session_uid'], unique=False)
    op.create_index(op.f('ix_job_batch_uid'), 'job', ['batch_uid'], unique=False)
    # ### end Alembic commands ###
