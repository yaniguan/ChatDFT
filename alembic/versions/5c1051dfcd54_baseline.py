"""baseline

Revision ID: 5c1051dfcd54
Revises: 
Create Date: 2025-08-09 22:49:43.045806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c1051dfcd54'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bulk_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('formula', sa.String(), nullable=True),
    sa.Column('structure_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculation_parameter',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('structure_type', sa.String(), nullable=True),
    sa.Column('structure_id', sa.Integer(), nullable=True),
    sa.Column('engine', sa.String(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('incar_settings', sa.JSON(), nullable=True),
    sa.Column('input_files', sa.JSON(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('suggestions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_session',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uid', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('project', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('pinned', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('intent_phrase',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('intent_stage', sa.String(), nullable=True),
    sa.Column('intent_area', sa.String(), nullable=True),
    sa.Column('specific_task', sa.String(), nullable=True),
    sa.Column('phrase', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('lang', sa.String(), nullable=True),
    sa.Column('remark', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('intent_stage', 'intent_area', 'specific_task', 'phrase', name='_intent_phrase_uc')
    )
    op.create_table('knowledge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('source_type', sa.String(), nullable=True),
    sa.Column('source_id', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi', name='_knowledge_doi_uc'),
    sa.UniqueConstraint('source_type', 'source_id', name='_knowledge_src_uc')
    )
    op.create_index(op.f('ix_knowledge_doi'), 'knowledge', ['doi'], unique=False)
    op.create_table('modification_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_type', sa.String(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('modification_type', sa.String(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('modified_data', sa.JSON(), nullable=True),
    sa.Column('cif_path', sa.String(), nullable=True),
    sa.Column('poscar_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('msg_type', sa.String(), nullable=True),
    sa.Column('intent_stage', sa.String(), nullable=True),
    sa.Column('intent_area', sa.String(), nullable=True),
    sa.Column('specific_intent', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('llm_model', sa.String(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('references', sa.JSON(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('token_usage', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['chat_message.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chatmessage_role', 'chat_message', ['role'], unique=False)
    op.create_index('idx_chatmessage_session_id', 'chat_message', ['session_id'], unique=False)
    op.create_index(op.f('ix_chat_message_role'), 'chat_message', ['role'], unique=False)
    op.create_index(op.f('ix_chat_message_session_id'), 'chat_message', ['session_id'], unique=False)
    op.create_table('execution_run',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('workdir', sa.String(), nullable=False),
    sa.Column('tasks_json', sa.JSON(), nullable=True),
    sa.Column('selected_ids', sa.JSON(), nullable=True),
    sa.Column('results_json', sa.JSON(), nullable=True),
    sa.Column('summary_json', sa.JSON(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.String(), nullable=True),
    sa.Column('session_uid', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('server_name', sa.String(), nullable=True),
    sa.Column('scheduler', sa.String(), nullable=True),
    sa.Column('batch_uid', sa.String(), nullable=True),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('remote_dir', sa.String(), nullable=True),
    sa.Column('local_dir', sa.String(), nullable=True),
    sa.Column('slurm_or_pbs_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_uid'], ['chat_session.uid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_uid')
    )
    op.create_index(op.f('ix_job_batch_uid'), 'job', ['batch_uid'], unique=False)
    op.create_index(op.f('ix_job_session_uid'), 'job', ['session_uid'], unique=False)
    op.create_table('job_schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('calculation_id', sa.Integer(), nullable=True),
    sa.Column('scheduler_type', sa.String(), nullable=True),
    sa.Column('cluster_name', sa.String(), nullable=True),
    sa.Column('queue', sa.String(), nullable=True),
    sa.Column('nodes', sa.Integer(), nullable=True),
    sa.Column('ntasks_per_node', sa.Integer(), nullable=True),
    sa.Column('walltime', sa.String(), nullable=True),
    sa.Column('submission_script', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_id'], ['calculation_parameter.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('calculation_id', sa.Integer(), nullable=True),
    sa.Column('analysis_type', sa.String(), nullable=True),
    sa.Column('input_files', sa.JSON(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('plots', sa.JSON(), nullable=True),
    sa.Column('llm_summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_id'], ['calculation_parameter.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slab_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bulk_id', sa.Integer(), nullable=True),
    sa.Column('miller_index', sa.String(), nullable=False),
    sa.Column('supercell_size', sa.String(), nullable=True),
    sa.Column('layers', sa.Integer(), nullable=True),
    sa.Column('fixed_layers', sa.Integer(), nullable=True),
    sa.Column('vacuum_thickness', sa.Float(), nullable=True),
    sa.Column('termination', sa.String(), nullable=True),
    sa.Column('shift', sa.Float(), nullable=True),
    sa.Column('symmetry_reduction', sa.Boolean(), nullable=True),
    sa.Column('is_symmetric_slab', sa.Boolean(), nullable=True),
    sa.Column('min_slab_size', sa.Float(), nullable=True),
    sa.Column('min_vacuum_size', sa.Float(), nullable=True),
    sa.Column('slab_data', sa.JSON(), nullable=True),
    sa.Column('cif_path', sa.String(), nullable=True),
    sa.Column('poscar_path', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bulk_id'], ['bulk_structure.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('adsorption_structure',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('slab_id', sa.Integer(), nullable=True),
    sa.Column('adsorbate_name', sa.String(), nullable=True),
    sa.Column('adsorbate_formula', sa.String(), nullable=True),
    sa.Column('adsorption_site', sa.String(), nullable=True),
    sa.Column('site_coordinates', sa.JSON(), nullable=True),
    sa.Column('coverage', sa.Float(), nullable=True),
    sa.Column('orientation', sa.JSON(), nullable=True),
    sa.Column('height_above_surface', sa.Float(), nullable=True),
    sa.Column('is_relaxed', sa.Boolean(), nullable=True),
    sa.Column('adsorption_energy', sa.Float(), nullable=True),
    sa.Column('cif_path', sa.String(), nullable=True),
    sa.Column('poscar_path', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['slab_id'], ['slab_structure.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('execution_step',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('step_order', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('agent', sa.String(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['execution_run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_execution_step_run_id'), 'execution_step', ['run_id'], unique=False)
    op.create_table('file_asset',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.String(), nullable=True),
    sa.Column('kind', sa.String(), nullable=True),
    sa.Column('path_remote', sa.String(), nullable=True),
    sa.Column('path_local', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_uid'], ['job.job_uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_asset_job_uid'), 'file_asset', ['job_uid'], unique=False)
    op.create_table('hypothesis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('intent_stage', sa.String(), nullable=True),
    sa.Column('intent_area', sa.String(), nullable=True),
    sa.Column('hypothesis', sa.Text(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('agent', sa.String(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_message.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result_row',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_uid', sa.String(), nullable=True),
    sa.Column('step', sa.String(), nullable=True),
    sa.Column('energy', sa.String(), nullable=True),
    sa.Column('info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_uid'], ['job.job_uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_result_row_job_uid'), 'result_row', ['job_uid'], unique=False)
    op.create_table('workflow_task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('step_order', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('agent', sa.String(), nullable=True),
    sa.Column('engine', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_msg', sa.Text(), nullable=True),
    sa.Column('run_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_message.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parent_task_id'], ['workflow_task.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_workflowtask_agent', 'workflow_task', ['agent'], unique=False)
    op.create_index('idx_workflowtask_name', 'workflow_task', ['name'], unique=False)
    op.create_index('idx_workflowtask_session_id', 'workflow_task', ['session_id'], unique=False)
    op.create_index('idx_workflowtask_status', 'workflow_task', ['status'], unique=False)
    op.create_index(op.f('ix_workflow_task_session_id'), 'workflow_task', ['session_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workflow_task_session_id'), table_name='workflow_task')
    op.drop_index('idx_workflowtask_status', table_name='workflow_task')
    op.drop_index('idx_workflowtask_session_id', table_name='workflow_task')
    op.drop_index('idx_workflowtask_name', table_name='workflow_task')
    op.drop_index('idx_workflowtask_agent', table_name='workflow_task')
    op.drop_table('workflow_task')
    op.drop_index(op.f('ix_result_row_job_uid'), table_name='result_row')
    op.drop_table('result_row')
    op.drop_table('hypothesis')
    op.drop_index(op.f('ix_file_asset_job_uid'), table_name='file_asset')
    op.drop_table('file_asset')
    op.drop_index(op.f('ix_execution_step_run_id'), table_name='execution_step')
    op.drop_table('execution_step')
    op.drop_table('adsorption_structure')
    op.drop_table('slab_structure')
    op.drop_table('post_analysis')
    op.drop_table('job_schedule')
    op.drop_index(op.f('ix_job_session_uid'), table_name='job')
    op.drop_index(op.f('ix_job_batch_uid'), table_name='job')
    op.drop_table('job')
    op.drop_table('execution_run')
    op.drop_index(op.f('ix_chat_message_session_id'), table_name='chat_message')
    op.drop_index(op.f('ix_chat_message_role'), table_name='chat_message')
    op.drop_index('idx_chatmessage_session_id', table_name='chat_message')
    op.drop_index('idx_chatmessage_role', table_name='chat_message')
    op.drop_table('chat_message')
    op.drop_table('modification_structure')
    op.drop_index(op.f('ix_knowledge_doi'), table_name='knowledge')
    op.drop_table('knowledge')
    op.drop_table('intent_phrase')
    op.drop_table('chat_session')
    op.drop_table('calculation_parameter')
    op.drop_table('bulk_structure')
    # ### end Alembic commands ###
